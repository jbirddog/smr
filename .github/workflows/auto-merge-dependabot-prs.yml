name: Dependabot auto-merge
on:
  workflow_run:
    workflows: ["Tests"]
    types:
      - completed

# workflow_call is used to indicate that a workflow can be called by another workflow. When a workflow is triggered with the workflow_call event, the event payload in the called workflow is the same event payload from the calling workflow. For more information see, "Reusing workflows."

# https://docs.github.com/en/actions/using-workflows/events-that-trigger-workflows#pull_request
# maybe hook into this instead of workflow_run:
# on:
#   pull_request:
#   pull_request_target:
#     types: [labeled]

permissions:
  contents: write

jobs:
  dependabot:
    runs-on: ubuntu-latest
    # if: ${{ github.actor == 'dependabot[bot]' && github.event.workflow_run.conclusion == 'success' && github.event_name == 'pull_request' }}
    # if: ${{ github.event_name == 'pull_request' }}
    steps:
      - name: Log github metadata
        # if: ${{contains(steps.metadata.outputs.dependency-names, 'pytest') && steps.metadata.outputs.update-type == 'version-update:semver-patch'}}
        # if: ${{contains(steps.metadata.outputs.dependency-names, 'pytest')}}
        # ideally we auto-merge if all checks pass
        run: |
          echo about to log stuff from webhook
          echo actor: ${{ github.actor }}
          echo conclusion: ${{ github.event.workflow_run.conclusion }}
          echo event_name: ${{ github.event_name }}
          echo pr_url: ${{ github.event.pull_request.html_url }}
          echo workflow: ${{ github.workflow }}
          echo and going to next step where it should auto merge
        env:
          PR_URL: ${{github.event.pull_request.html_url}}
          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
      - name: Dependabot metadata
        id: metadata
        uses: dependabot/fetch-metadata@v1.3.1
        with:
          github-token: "${{ secrets.GITHUB_TOKEN }}"
      - name: Enable auto-merge for Dependabot PRs
        # if: ${{contains(steps.metadata.outputs.dependency-names, 'pytest') && steps.metadata.outputs.update-type == 'version-update:semver-patch'}}
        # if: ${{contains(steps.metadata.outputs.dependency-names, 'pytest')}}
        # ideally we auto-merge if all checks pass
        run: gh pr merge --auto --merge "$PR_URL"
        env:
          PR_URL: ${{github.event.pull_request.html_url}}
          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
