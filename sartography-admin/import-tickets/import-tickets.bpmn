<?xml version="1.0" encoding="UTF-8"?>
<bpmn:definitions xmlns:bpmn="http://www.omg.org/spec/BPMN/20100524/MODEL" xmlns:bpmndi="http://www.omg.org/spec/BPMN/20100524/DI" xmlns:dc="http://www.omg.org/spec/DD/20100524/DC" xmlns:di="http://www.omg.org/spec/DD/20100524/DI" id="Definitions_96f6665" targetNamespace="http://bpmn.io/schema/bpmn" exporter="Camunda Modeler" exporterVersion="3.0.0-dev">
  <bpmn:process id="Process_bd2e724" isExecutable="true">
    <bpmn:startEvent id="StartEvent_1">
      <bpmn:outgoing>Flow_0pvp5mz</bpmn:outgoing>
    </bpmn:startEvent>
    <bpmn:endEvent id="Event_0kj51tx">
      <bpmn:incoming>Flow_04qc4ur</bpmn:incoming>
    </bpmn:endEvent>
    <bpmn:sequenceFlow id="Flow_0pvp5mz" sourceRef="StartEvent_1" targetRef="Activity_17wwliq" />
    <bpmn:sequenceFlow id="Flow_04qc4ur" sourceRef="Activity_17wwliq" targetRef="Event_0kj51tx" />
    <bpmn:scriptTask id="Activity_17wwliq" name="Import tickets from csv inside backend" scriptFormat="python">
      <bpmn:incoming>Flow_0pvp5mz</bpmn:incoming>
      <bpmn:outgoing>Flow_04qc4ur</bpmn:outgoing>
      <bpmn:script>import os
from flask_bpmn.models.db import db

from spiffworkflow_backend.models.process_instance import ProcessInstanceModel

import csv

from spiffworkflow_backend import create_app
from spiffworkflow_backend.models.user import UserModel
from spiffworkflow_backend.services.process_instance_processor import ProcessInstanceProcessor
from spiffworkflow_backend.services.process_instance_service import ProcessInstanceService
from flask import current_app

from spiffworkflow_backend.services.process_model_service import ProcessModelService


process_model_identifier_ticket = "ticket"
db.session.query(ProcessInstanceModel).filter(ProcessInstanceModel.process_model_identifier == process_model_identifier_ticket).delete()
db.session.commit()

"""Print process instance count."""
process_instances = ProcessInstanceModel.query.filter_by(process_model_identifier=process_model_identifier_ticket).all()
process_instance_count = len(process_instances)
print(f"process_instance_count: {process_instance_count}")

process_model = ProcessModelService().get_process_model(process_model_identifier_ticket)
columns_to_data_key_mappings = {"Month": "month", "MS": "milestone", "ID": "req_id", "Dev Days": "dev_days"}
columns_to_header_index_mappings = {}

user = UserModel.query.filter_by(username='test_user1').first()

with open("tests/files/tickets.csv") as infile:
    reader = csv.reader(infile, delimiter=",")
    header = next(reader)
    for column_name in columns_to_data_key_mappings:
        columns_to_header_index_mappings[column_name] = header.index(column_name)
    id_index = header.index("ID")
    priority_index = header.index("Priority")
    print(f"header: {header}")
    for row in reader:
        ticket_identifier = row[id_index]
        priority = row[priority_index]
        print(f"ticket_identifier: {ticket_identifier}")
        print(f"priority: {priority}")

        process_instance = ProcessInstanceService.create_process_instance(
            process_model_identifier_ticket, user
        )
        processor = ProcessInstanceProcessor(process_instance)

        processor.do_engine_steps()
        processor.save()

        for column_name, desired_data_key in columns_to_data_key_mappings.items():
            appropriate_index = columns_to_header_index_mappings[column_name]
            print(f"appropriate_index: {appropriate_index}")
            processor.bpmn_process_instance.data[desired_data_key] = row[appropriate_index]
        processor.save()

        process_instance_data = processor.get_data()
        print(f"process_instance_data: {process_instance_data}")
</bpmn:script>
    </bpmn:scriptTask>
  </bpmn:process>
  <bpmndi:BPMNDiagram id="BPMNDiagram_1">
    <bpmndi:BPMNPlane id="BPMNPlane_1" bpmnElement="Process_bd2e724">
      <bpmndi:BPMNEdge id="Flow_04qc4ur_di" bpmnElement="Flow_04qc4ur">
        <di:waypoint x="390" y="165" />
        <di:waypoint x="426" y="165" />
        <di:waypoint x="426" y="177" />
        <di:waypoint x="462" y="177" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="Flow_0pvp5mz_di" bpmnElement="Flow_0pvp5mz">
        <di:waypoint x="215" y="177" />
        <di:waypoint x="253" y="177" />
        <di:waypoint x="253" y="165" />
        <di:waypoint x="290" y="165" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNShape id="_BPMNShape_StartEvent_2" bpmnElement="StartEvent_1">
        <dc:Bounds x="179" y="159" width="36" height="36" />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="Event_0kj51tx_di" bpmnElement="Event_0kj51tx">
        <dc:Bounds x="462" y="159" width="36" height="36" />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="Activity_0lu5tuc_di" bpmnElement="Activity_17wwliq">
        <dc:Bounds x="290" y="125" width="100" height="80" />
      </bpmndi:BPMNShape>
    </bpmndi:BPMNPlane>
  </bpmndi:BPMNDiagram>
</bpmn:definitions>
